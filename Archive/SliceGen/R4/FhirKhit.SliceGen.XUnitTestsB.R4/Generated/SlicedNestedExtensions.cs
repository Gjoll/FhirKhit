/*                                                                                                                                          // CSCodeFormatter.cs:54
 * Code in this class was auto generated by SliceGen                                                                                        // CSCodeFormatter.cs:55
*/                                                                                                                                          // CSCodeFormatter.cs:56
using System;                                                                                                                               // CSCodeFormatter.cs:57
using System.Linq;                                                                                                                          // CSCodeFormatter.cs:58
using System.Collections.Generic;                                                                                                           // CSCodeFormatter.cs:59
using System.Reflection;                                                                                                                    // CSCodeFormatter.cs:60
using System.Text;                                                                                                                          // CSCodeFormatter.cs:61
using Hl7.Fhir.Model;                                                                                                                       // CSCodeFormatter.cs:62
using FhirKhit.SliceGen.SharedLib;                                                                                                          // CSCodeFormatter.cs:63
                                                                                                                                            // CSCodeFormatter.cs:64
namespace FhirKhit.Test.R4                                                                                                                  // CSCodeFormatter.cs:65
{                                                                                                                                           // CSCodeFormatter.cs:66
                                                                                                                                            // CSCodeFormatter.cs:94
    /// <summary>
    /// Extension class to add slicing helper methods to Observation
    /// </summary>
    public static class SlicedNestedExtensions
    {                                                                                                                                       // CSCodeFormatter.cs:99
        #region SlicedNestedExtensions sub classes
                                                                                                                                            // CSSliceCreator.cs:261
        /// <summary>
        /// public interface that implements the functionality of slice Slice1Impl
        /// </summary>
        public interface ISlice1 : ISliceAccessorMultiple<Observation.ComponentComponent>                                                   // CSSliceCreator.cs:265
        {                                                                                                                                   // CSSliceCreator.cs:266
        }                                                                                                                                   // CSSliceCreator.cs:267
                                                                                                                                            // CSSliceCreator.cs:268
        /// <summary>
        /// private class that implements the functionality of slice Slice1Impl
        /// 
        /// {
        ///   "id": "Observation.component:Slice1",
        ///   "path": "Observation.component",
        ///   "sliceName": "Slice1",
        ///   "short": "Component results",
        ///   "definition": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.",
        ///   "comment": "For a discussion on the ways Observations can be assembled in groups together see [Notes](observation.html#notes) below.",
        ///   "requirements": "Component observations share the same attributes in the Observation resource as the primary observation and are always treated a part of a single observation (they are not separable).   However, the reference range for the primary observation value is not inherited by the component values and is required when appropriate for each component observation.",
        ///   "min": 0,
        ///   "max": "*",
        ///   "base": {
        ///     "path": "Observation.component",
        ///     "min": 0,
        ///     "max": "*"
        ///   },
        ///   "type": [
        ///     {
        ///       "code": "BackboneElement"
        ///     }
        ///   ],
        ///   "constraint": [
        ///     {
        ///       "key": "ele-1",
        ///       "severity": "error",
        ///       "human": "All FHIR elements must have a @value or children",
        ///       "expression": "hasValue() or (children().count() > id.count())",
        ///       "xpath": "@value|f:*|h:div",
        ///       "source": "Element"
        ///     }
        ///   ],
        ///   "isModifier": false,
        ///   "isSummary": true,
        ///   "mapping": [
        ///     {
        ///       "identity": "v2",
        ///       "map": "containment by OBX-4?"
        ///     },
        ///     {
        ///       "identity": "rim",
        ///       "map": "outBoundRelationship[typeCode=COMP]"
        ///     }
        ///   ]
        /// }
        /// </summary>
        class Slice1Impl : SliceListAccessorMultiple<Observation.ComponentComponent>, ISlice1                                               // CSSliceCreator.cs:274
        {                                                                                                                                   // CSSliceCreator.cs:275
            #region SlicedNestedExtensions.Slice1Impl fields
                                                                                                                                            // CSSliceCreator.cs:301
            /// <summary>
            /// slicing discriminator for Observation.component slice Slice1
            /// </summary>
            static Slicing<Observation.ComponentComponent> slicing = new Slicing<Observation.ComponentComponent>                            // CSSliceCreator.cs:305
            {                                                                                                                               // CSSliceCreator.cs:306
                Discriminators = new ISliceDiscriminator<Observation.ComponentComponent>[]                                                  // CSSliceCreator.cs:307
                {                                                                                                                           // CSSliceCreator.cs:308
                    /// Define discriminator'
                    /// {
                    ///   "type": "value",
                    ///   "path": "code"
                    /// }
                    new SliceOnValueDiscriminator<Observation.ComponentComponent, CodeableConcept>                                          // CSSliceCreator.cs:92
                    {                                                                                                                       // CSSliceCreator.cs:93
                        Path = "code",                                                                                                      // CSSliceCreator.cs:94
                        Pattern = FixComponentSlice1Code(),                                                                                 // CSSliceCreator.cs:95
                        ValueFilter = ValueFilterComponentSlice1Code                                                                        // CSSliceCreator.cs:96
                    }                                                                                                                       // CSSliceCreator.cs:97
                }                                                                                                                           // CSSliceCreator.cs:320
            };                                                                                                                              // CSSliceCreator.cs:321
            #endregion  // SlicedNestedExtensions.Slice1Impl  fields
            #region SlicedNestedExtensions.Slice1Impl methods
                                                                                                                                            // CSSliceCreator.cs:211
            /// <summary>
            /// Slice1Impl constructor
            /// </summary>
            public Slice1Impl(List<Observation.ComponentComponent> items)                                                                   // CSSliceCreator.cs:215
            {                                                                                                                               // CSSliceCreator.cs:216
                this.Items = items;                                                                                                         // CSSliceCreator.cs:217
                this.Slicing = slicing;                                                                                                     // CSSliceCreator.cs:218
            }                                                                                                                               // CSSliceCreator.cs:219
            static CodeableConcept FixComponentSlice1Code()                                                                                 // FhirConstruct.cs:771
            {                                                                                                                               // FhirConstruct.cs:772
                CodeableConcept retVal = new CodeableConcept();                                                                             // FhirConstruct.cs:773
                retVal.Coding = new List<Coding>();                                                                                         // FhirConstruct.cs:779
                {                                                                                                                           // FhirConstruct.cs:782
                    var temp2 = new Coding();                                                                                               // FhirConstruct.cs:783
                    temp2.SystemElement = new FhirUri();                                                                                    // FhirConstruct.cs:786
                    temp2.SystemElement.Value = "system";                                                                                   // FhirConstruct.cs:788
                    temp2.CodeElement = new Code();                                                                                         // FhirConstruct.cs:802
                    temp2.CodeElement.Value = "Slice3aCode";                                                                                // FhirConstruct.cs:804
                    retVal.Coding.Add(temp2);                                                                                               // FhirConstruct.cs:831
                }                                                                                                                           // FhirConstruct.cs:832
                return retVal;                                                                                                              // FhirConstruct.cs:847
            }                                                                                                                               // FhirConstruct.cs:848
            static Code FixComponentSlice1CodeCodingCode()                                                                                  // FhirConstruct.cs:7040
            {                                                                                                                               // FhirConstruct.cs:7041
                Code retVal = new Code();                                                                                                   // FhirConstruct.cs:7042
                retVal.Value = "Slice3aCode";                                                                                               // FhirConstruct.cs:7047
                return retVal;                                                                                                              // FhirConstruct.cs:7052
            }                                                                                                                               // FhirConstruct.cs:7053
                                                                                                                                            // CSSliceCreator.cs:66
            /// <summary>
            /// Return all elements for discriminator'                                                                                      // CSSliceCreator.cs:68
            /// {
            ///   "type": "value",
            ///   "path": "code"
            /// }
            /// </summary>
            static IEnumerable<CodeableConcept> ValueFilterComponentSlice1Code(IEnumerable<Observation.ComponentComponent> head)            // CSSliceCreator.cs:575
            {                                                                                                                               // CSSliceCreator.cs:508
                                                                                                                                            // CSSliceCreator.cs:509
                IEnumerable<CodeableConcept> GetChild_1(IEnumerable<Observation.ComponentComponent> inputElements)                          // CSSliceCreator.cs:459
                {                                                                                                                           // CSSliceCreator.cs:460
                    if (inputElements != null)                                                                                              // CSSliceCreator.cs:461
                    {                                                                                                                       // CSSliceCreator.cs:462
                        foreach (Observation.ComponentComponent inputElement in inputElements)                                              // CSSliceCreator.cs:463
                        {                                                                                                                   // CSSliceCreator.cs:464
                            yield return inputElement.Code;                                                                                 // CSSliceCreator.cs:479
                        }                                                                                                                   // CSSliceCreator.cs:484
                    }                                                                                                                       // CSSliceCreator.cs:485
                }                                                                                                                           // CSSliceCreator.cs:486
                IEnumerable<CodeableConcept> result1 = GetChild_1(head);                                                                    // CSSliceCreator.cs:561
                return result1;                                                                                                             // CSSliceCreator.cs:568
            }                                                                                                                               // CSSliceCreator.cs:569
                                                                                                                                            // CSSliceCreator.cs:372
            /// <summary>
            /// Create and initialize a new item
            /// </summary>
            protected override Observation.ComponentComponent Create()                                                                      // CSSliceCreator.cs:376
            {                                                                                                                               // CSSliceCreator.cs:377
                Observation.ComponentComponent retVal = new Observation.ComponentComponent();                                               // CSSliceCreator.cs:378
                CodeableConcept var3 = FixComponentSlice1Code();                                                                            // CSSliceCreator.cs:344
                retVal.Code = var3;                                                                                                         // CSSliceCreator.cs:348
                return retVal;                                                                                                              // CSSliceCreator.cs:382
            }                                                                                                                               // CSSliceCreator.cs:383
            #endregion // SlicedNestedExtensions.Slice1Impl  methods
        }                                                                                                                                   // CSSliceCreator.cs:285
        #endregion
        #region fields SlicedNestedExtensions fields
        #endregion
        #region methods SlicedNestedExtensions methods
                                                                                                                                            // CSSliceCreator.cs:145
        /// <summary>
        /// Extension method to return slice Slice1 on component
        /// </summary>
        /// <example>
        /// Observation resource = new Observation();
        /// SlicedNestedExtensions.ISlice1 sliceAccessor = resource.Component.Slice1();
        /// </example>
        public static ISlice1 Slice1(this List<Observation.ComponentComponent> item)                                                        // CSSliceCreator.cs:153
        {                                                                                                                                   // CSSliceCreator.cs:154
            Slice1Impl retVal = new Slice1Impl(item);                                                                                       // CSSliceCreator.cs:155
            return retVal;                                                                                                                  // CSSliceCreator.cs:156
        }                                                                                                                                   // CSSliceCreator.cs:157
        #endregion
    }                                                                                                                                       // CSCodeFormatter.cs:120
}                                                                                                                                           // CSCodeFormatter.cs:77
