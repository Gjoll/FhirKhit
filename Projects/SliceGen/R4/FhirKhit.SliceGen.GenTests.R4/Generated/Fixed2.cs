/*                                                                                                                                          // CSCodeFormatter.cs:72
 * Code in this class was auto generated by SliceGen                                                                                         // CSCodeFormatter.cs:73
*/                                                                                                                                          // CSCodeFormatter.cs:74
using System;                                                                                                                               // CSCodeFormatter.cs:75
using System.Linq;                                                                                                                          // CSCodeFormatter.cs:76
using System.Collections.Generic;                                                                                                           // CSCodeFormatter.cs:77
using System.Reflection;                                                                                                                    // CSCodeFormatter.cs:78
using System.Text;                                                                                                                          // CSCodeFormatter.cs:79
using FhirKhit.SliceGen.ShareLib;                                                                                                           // CSCodeFormatter.cs:80
using Hl7.Fhir.Model;                                                                                                                       // CSCodeFormatter.cs:81
                                                                                                                                            // CSCodeFormatter.cs:82
namespace FhirKhit.Test.R4                                                                                                                  // CSCodeFormatter.cs:83
{                                                                                                                                           // CSCodeFormatter.cs:84
                                                                                                                                            // CodeBlockNested.cs:315
    /// <summary>
    /// Class to implement 'Fixed2'
/// </summary>
    public class Fixed2 :                                                                                                                   // CSClassFormatter.cs:98
        ItemBase<Observation>                                                                                                               // CSClassFormatter.cs:99
    {                                                                                                                                       // CSClassFormatter.cs:100
#region Sub Class Definitions
#region class Accessor__IdElement
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property IdElement
/// </summary>
        public class Accessor__IdElement : ItemBase<Observation>                                                                            // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__IdElement Create(Observation ptr)                                                                       // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__IdElement retVal = new Accessor__IdElement();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__IdElement() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Id' value
            /// return true if successfull, false if value is null or con not be converted to 'Id'
/// </summary>
            public bool Get(out Id value)                                                                                                   // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.IdElement as Id;                                                                                           // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Id' Value
/// </summary>
            public void Set(Id value) => this.Ptr.IdElement = value;                                                                        // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__Meta
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Meta
/// </summary>
        public class Accessor__Meta : ItemBase<Observation>                                                                                 // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Meta Create(Observation ptr)                                                                            // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Meta retVal = new Accessor__Meta();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Meta() : base()                                                                                                // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Meta' value
            /// return true if successfull, false if value is null or con not be converted to 'Meta'
/// </summary>
            public bool Get(out Meta value)                                                                                                 // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.Meta as Meta;                                                                                              // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Meta' Value
/// </summary>
            public void Set(Meta value) => this.Ptr.Meta = value;                                                                           // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__ImplicitRulesElement
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property ImplicitRulesElement
/// </summary>
        public class Accessor__ImplicitRulesElement : ItemBase<Observation>                                                                 // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__ImplicitRulesElement Create(Observation ptr)                                                            // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__ImplicitRulesElement retVal = new Accessor__ImplicitRulesElement();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__ImplicitRulesElement() : base()                                                                                // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'FhirUri' value
            /// return true if successfull, false if value is null or con not be converted to 'FhirUri'
/// </summary>
            public bool Get(out FhirUri value)                                                                                              // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.ImplicitRulesElement as FhirUri;                                                                           // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'FhirUri' Value
/// </summary>
            public void Set(FhirUri value) => this.Ptr.ImplicitRulesElement = value;                                                        // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__LanguageElement
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property LanguageElement
/// </summary>
        public class Accessor__LanguageElement : ItemBase<Observation>                                                                      // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__LanguageElement Create(Observation ptr)                                                                 // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__LanguageElement retVal = new Accessor__LanguageElement();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__LanguageElement() : base()                                                                                     // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Code' value
            /// return true if successfull, false if value is null or con not be converted to 'Code'
/// </summary>
            public bool Get(out Code value)                                                                                                 // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.LanguageElement as Code;                                                                                   // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Code' Value
/// </summary>
            public void Set(Code value) => this.Ptr.LanguageElement = value;                                                                // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__Text
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Text
/// </summary>
        public class Accessor__Text : ItemBase<Observation>                                                                                 // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Text Create(Observation ptr)                                                                            // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Text retVal = new Accessor__Text();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Text() : base()                                                                                                // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Narrative' value
            /// return true if successfull, false if value is null or con not be converted to 'Narrative'
/// </summary>
            public bool Get(out Narrative value)                                                                                            // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.Text as Narrative;                                                                                         // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Narrative' Value
/// </summary>
            public void Set(Narrative value) => this.Ptr.Text = value;                                                                      // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Contained
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Contained
/// </summary>
        public class Accessor__Contained : ItemBase<Observation>                                                                            // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Contained Create(Observation ptr)                                                                       // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Contained retVal = new Accessor__Contained();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Contained() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Contained.RemoveAt(index);                                                        // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<Resource> Get() => this.Ptr.Contained;                                                                       // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__ModifierExtension
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property ModifierExtension
/// </summary>
        public class Accessor__ModifierExtension : ItemBase<Observation>                                                                    // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__ModifierExtension Create(Observation ptr)                                                               // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__ModifierExtension retVal = new Accessor__ModifierExtension();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__ModifierExtension() : base()                                                                                   // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.ModifierExtension.RemoveAt(index);                                                // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<Extension> Get() => this.Ptr.ModifierExtension;                                                              // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Identifier
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Identifier
/// </summary>
        public class Accessor__Identifier : ItemBase<Observation>                                                                           // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Identifier Create(Observation ptr)                                                                      // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Identifier retVal = new Accessor__Identifier();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Count of items
/// </summary>
            public Int32 Count => this.Ptr.Identifier.Count;                                                                                // CSClassFormatter.cs:1068
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Identifier() : base()                                                                                          // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Identifier.RemoveAt(index);                                                       // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<Identifier> Get() => this.Ptr.Identifier;                                                                    // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Identifier' value
            /// return true if successfull, false if value is null or con not be converted to 'Identifier'
/// </summary>
            public bool Get(Int32 index, out Identifier value)                                                                              // CSClassFormatter.cs:1075
            {                                                                                                                               // CSClassFormatter.cs:1076
                value = this.Ptr.Identifier[index] as Identifier;                                                                           // CSClassFormatter.cs:1077
                return value != null;                                                                                                       // CSClassFormatter.cs:1078
            }                                                                                                                               // CSClassFormatter.cs:1079
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Identifier' Value
/// </summary>
            public void Set(Int32 index, Identifier value) => this.Ptr.Identifier[index] = value;                                           // CSClassFormatter.cs:1084
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Add 'Identifier' Value
/// </summary>
            public void Add(Identifier value) => this.Ptr.Identifier.Add(value);                                                            // CSClassFormatter.cs:1089
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__BasedOn
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property BasedOn
/// </summary>
        public class Accessor__BasedOn : ItemBase<Observation>                                                                              // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__BasedOn Create(Observation ptr)                                                                         // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__BasedOn retVal = new Accessor__BasedOn();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__BasedOn() : base()                                                                                             // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.BasedOn.RemoveAt(index);                                                          // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<ResourceReference> Get() => this.Ptr.BasedOn;                                                                // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__PartOf
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property PartOf
/// </summary>
        public class Accessor__PartOf : ItemBase<Observation>                                                                               // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__PartOf Create(Observation ptr)                                                                          // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__PartOf retVal = new Accessor__PartOf();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__PartOf() : base()                                                                                              // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.PartOf.RemoveAt(index);                                                           // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<ResourceReference> Get() => this.Ptr.PartOf;                                                                 // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
#region class Accessor__StatusElement
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property StatusElement
/// </summary>
        public class Accessor__StatusElement : ItemBase<Observation>                                                                        // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__StatusElement Create(Observation ptr)                                                                   // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__StatusElement retVal = new Accessor__StatusElement();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__StatusElement() : base()                                                                                       // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Code<ObservationStatus>' value
            /// return true if successfull, false if value is null or con not be converted to 'Code<ObservationStatus>'
/// </summary>
            public bool Get(out Code<ObservationStatus> value)                                                                              // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.StatusElement as Code<ObservationStatus>;                                                                  // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Code<ObservationStatus>' Value
/// </summary>
            public void Set(Code<ObservationStatus> value) => this.Ptr.StatusElement = value;                                               // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Category
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Category
/// </summary>
        public class Accessor__Category : ItemBase<Observation>                                                                             // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Category Create(Observation ptr)                                                                        // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Category retVal = new Accessor__Category();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Count of items
/// </summary>
            public Int32 Count => this.Ptr.Category.Count;                                                                                  // CSClassFormatter.cs:1068
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Category() : base()                                                                                            // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Category.RemoveAt(index);                                                         // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<CodeableConcept> Get() => this.Ptr.Category;                                                                 // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'CodeableConcept' value
            /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
            public bool Get(Int32 index, out CodeableConcept value)                                                                         // CSClassFormatter.cs:1075
            {                                                                                                                               // CSClassFormatter.cs:1076
                value = this.Ptr.Category[index] as CodeableConcept;                                                                        // CSClassFormatter.cs:1077
                return value != null;                                                                                                       // CSClassFormatter.cs:1078
            }                                                                                                                               // CSClassFormatter.cs:1079
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'CodeableConcept' Value
/// </summary>
            public void Set(Int32 index, CodeableConcept value) => this.Ptr.Category[index] = value;                                        // CSClassFormatter.cs:1084
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Add 'CodeableConcept' Value
/// </summary>
            public void Add(CodeableConcept value) => this.Ptr.Category.Add(value);                                                         // CSClassFormatter.cs:1089
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
#region class Accessor__Code
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Code
/// </summary>
        public class Accessor__Code : ItemBase<Observation>                                                                                 // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Code Create(Observation ptr)                                                                            // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Code retVal = new Accessor__Code();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Code() : base()                                                                                                // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'CodeableConcept' value
            /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
            public bool Get(out CodeableConcept value)                                                                                      // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.Code as CodeableConcept;                                                                                   // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'CodeableConcept' Value
/// </summary>
            public void Set(CodeableConcept value) => this.Ptr.Code = value;                                                                // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__Subject
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Subject
/// </summary>
        public class Accessor__Subject : ItemBase<Observation>                                                                              // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Subject Create(Observation ptr)                                                                         // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Subject retVal = new Accessor__Subject();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Subject() : base()                                                                                             // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Focus
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Focus
/// </summary>
        public class Accessor__Focus : ItemBase<Observation>                                                                                // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Focus Create(Observation ptr)                                                                           // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Focus retVal = new Accessor__Focus();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Focus() : base()                                                                                               // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Focus.RemoveAt(index);                                                            // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<ResourceReference> Get() => this.Ptr.Focus;                                                                  // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
#region class Accessor__Encounter
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Encounter
/// </summary>
        public class Accessor__Encounter : ItemBase<Observation>                                                                            // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Encounter Create(Observation ptr)                                                                       // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Encounter retVal = new Accessor__Encounter();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Encounter() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Effective
/// </summary>
        public class Accessor__Effective : ItemBase<Observation>                                                                            // CSClassFormatter.cs:670
        {                                                                                                                                   // CSClassFormatter.cs:671
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Effective Create(Observation ptr)                                                                       // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Effective retVal = new Accessor__Effective();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Effective() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing fixed property Observation.effective[x].
/// </summary>
            public bool Get(out Period value)                                                                                               // CSClassFormatter.cs:680
            {                                                                                                                               // CSClassFormatter.cs:681
                value = (Period) this.Ptr.Effective;                                                                                        // CSClassFormatter.cs:685
                return value != null;                                                                                                       // CSClassFormatter.cs:690
            }                                                                                                                               // CSClassFormatter.cs:691
        }                                                                                                                                   // CSClassFormatter.cs:692
#region class Accessor__IssuedElement
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property IssuedElement
/// </summary>
        public class Accessor__IssuedElement : ItemBase<Observation>                                                                        // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__IssuedElement Create(Observation ptr)                                                                   // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__IssuedElement retVal = new Accessor__IssuedElement();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__IssuedElement() : base()                                                                                       // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Instant' value
            /// return true if successfull, false if value is null or con not be converted to 'Instant'
/// </summary>
            public bool Get(out Instant value)                                                                                              // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.IssuedElement as Instant;                                                                                  // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Instant' Value
/// </summary>
            public void Set(Instant value) => this.Ptr.IssuedElement = value;                                                               // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Performer
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Performer
/// </summary>
        public class Accessor__Performer : ItemBase<Observation>                                                                            // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Performer Create(Observation ptr)                                                                       // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Performer retVal = new Accessor__Performer();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Performer() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Performer.RemoveAt(index);                                                        // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<ResourceReference> Get() => this.Ptr.Performer;                                                              // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Value
/// </summary>
        public class Accessor__Value : ItemBase<Observation>                                                                                // CSClassFormatter.cs:670
        {                                                                                                                                   // CSClassFormatter.cs:671
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Value Create(Observation ptr)                                                                           // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Value retVal = new Accessor__Value();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Value() : base()                                                                                               // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing fixed property Observation.value[x].
/// </summary>
            public bool Get(out FhirBoolean value)                                                                                          // CSClassFormatter.cs:680
            {                                                                                                                               // CSClassFormatter.cs:681
                value = (FhirBoolean) this.Ptr.Value;                                                                                       // CSClassFormatter.cs:685
                return value != null;                                                                                                       // CSClassFormatter.cs:690
            }                                                                                                                               // CSClassFormatter.cs:691
        }                                                                                                                                   // CSClassFormatter.cs:692
#region class Accessor__DataAbsentReason
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property DataAbsentReason
/// </summary>
        public class Accessor__DataAbsentReason : ItemBase<Observation>                                                                     // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__DataAbsentReason Create(Observation ptr)                                                                // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__DataAbsentReason retVal = new Accessor__DataAbsentReason();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__DataAbsentReason() : base()                                                                                    // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'CodeableConcept' value
            /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
            public bool Get(out CodeableConcept value)                                                                                      // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.DataAbsentReason as CodeableConcept;                                                                       // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'CodeableConcept' Value
/// </summary>
            public void Set(CodeableConcept value) => this.Ptr.DataAbsentReason = value;                                                    // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Interpretation
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Interpretation
/// </summary>
        public class Accessor__Interpretation : ItemBase<Observation>                                                                       // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Interpretation Create(Observation ptr)                                                                  // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Interpretation retVal = new Accessor__Interpretation();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Count of items
/// </summary>
            public Int32 Count => this.Ptr.Interpretation.Count;                                                                            // CSClassFormatter.cs:1068
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Interpretation() : base()                                                                                      // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Interpretation.RemoveAt(index);                                                   // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<CodeableConcept> Get() => this.Ptr.Interpretation;                                                           // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'CodeableConcept' value
            /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
            public bool Get(Int32 index, out CodeableConcept value)                                                                         // CSClassFormatter.cs:1075
            {                                                                                                                               // CSClassFormatter.cs:1076
                value = this.Ptr.Interpretation[index] as CodeableConcept;                                                                  // CSClassFormatter.cs:1077
                return value != null;                                                                                                       // CSClassFormatter.cs:1078
            }                                                                                                                               // CSClassFormatter.cs:1079
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'CodeableConcept' Value
/// </summary>
            public void Set(Int32 index, CodeableConcept value) => this.Ptr.Interpretation[index] = value;                                  // CSClassFormatter.cs:1084
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Add 'CodeableConcept' Value
/// </summary>
            public void Add(CodeableConcept value) => this.Ptr.Interpretation.Add(value);                                                   // CSClassFormatter.cs:1089
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Note
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Note
/// </summary>
        public class Accessor__Note : ItemBase<Observation>                                                                                 // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Note Create(Observation ptr)                                                                            // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Note retVal = new Accessor__Note();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Count of items
/// </summary>
            public Int32 Count => this.Ptr.Note.Count;                                                                                      // CSClassFormatter.cs:1068
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Note() : base()                                                                                                // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Note.RemoveAt(index);                                                             // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<Annotation> Get() => this.Ptr.Note;                                                                          // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Annotation' value
            /// return true if successfull, false if value is null or con not be converted to 'Annotation'
/// </summary>
            public bool Get(Int32 index, out Annotation value)                                                                              // CSClassFormatter.cs:1075
            {                                                                                                                               // CSClassFormatter.cs:1076
                value = this.Ptr.Note[index] as Annotation;                                                                                 // CSClassFormatter.cs:1077
                return value != null;                                                                                                       // CSClassFormatter.cs:1078
            }                                                                                                                               // CSClassFormatter.cs:1079
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Annotation' Value
/// </summary>
            public void Set(Int32 index, Annotation value) => this.Ptr.Note[index] = value;                                                 // CSClassFormatter.cs:1084
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Add 'Annotation' Value
/// </summary>
            public void Add(Annotation value) => this.Ptr.Note.Add(value);                                                                  // CSClassFormatter.cs:1089
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
#region class Accessor__BodySite
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property BodySite
/// </summary>
        public class Accessor__BodySite : ItemBase<Observation>                                                                             // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__BodySite Create(Observation ptr)                                                                        // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__BodySite retVal = new Accessor__BodySite();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__BodySite() : base()                                                                                            // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'CodeableConcept' value
            /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
            public bool Get(out CodeableConcept value)                                                                                      // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.BodySite as CodeableConcept;                                                                               // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'CodeableConcept' Value
/// </summary>
            public void Set(CodeableConcept value) => this.Ptr.BodySite = value;                                                            // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__Method
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Method
/// </summary>
        public class Accessor__Method : ItemBase<Observation>                                                                               // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Method Create(Observation ptr)                                                                          // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Method retVal = new Accessor__Method();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Method() : base()                                                                                              // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'CodeableConcept' value
            /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
            public bool Get(out CodeableConcept value)                                                                                      // CSClassFormatter.cs:771
            {                                                                                                                               // CSClassFormatter.cs:772
                value = this.Ptr.Method as CodeableConcept;                                                                                 // CSClassFormatter.cs:773
                return value != null;                                                                                                       // CSClassFormatter.cs:774
            }                                                                                                                               // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'CodeableConcept' Value
/// </summary>
            public void Set(CodeableConcept value) => this.Ptr.Method = value;                                                              // CSClassFormatter.cs:779
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__Specimen
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Specimen
/// </summary>
        public class Accessor__Specimen : ItemBase<Observation>                                                                             // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Specimen Create(Observation ptr)                                                                        // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Specimen retVal = new Accessor__Specimen();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Specimen() : base()                                                                                            // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
#region class Accessor__Device
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor for property Device
/// </summary>
        public class Accessor__Device : ItemBase<Observation>                                                                               // CSClassFormatter.cs:916
        {                                                                                                                                   // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Device Create(Observation ptr)                                                                          // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Device retVal = new Accessor__Device();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Device() : base()                                                                                              // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
        }                                                                                                                                   // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__ReferenceRange
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property ReferenceRange
/// </summary>
        public class Accessor__ReferenceRange : ItemBase<Observation>                                                                       // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__ReferenceRange Create(Observation ptr)                                                                  // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__ReferenceRange retVal = new Accessor__ReferenceRange();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Count of items
/// </summary>
            public Int32 Count => this.Ptr.ReferenceRange.Count;                                                                            // CSClassFormatter.cs:1022
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__ReferenceRange() : base()                                                                                      // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.ReferenceRange.RemoveAt(index);                                                   // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<Observation.ReferenceRangeComponent> Get() => this.Ptr.ReferenceRange;                                       // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Observation.ReferenceRangeComponent' value
            /// return true if successfull, false if value is null or con not be converted to 'Observation.ReferenceRangeComponent'
/// </summary>
            public bool Get(Int32 index, out Accessor__ReferenceRangeComponent value)                                                       // CSClassFormatter.cs:1030
            {                                                                                                                               // CSClassFormatter.cs:1031
                value = null;                                                                                                               // CSClassFormatter.cs:1032
                Observation.ReferenceRangeComponent temp = this.Ptr.ReferenceRange[index];                                                  // CSClassFormatter.cs:1033
                if (temp == null) return false;                                                                                             // CSClassFormatter.cs:1034
                value = Accessor__ReferenceRangeComponent.Create(temp);                                                                     // CSClassFormatter.cs:1035
                return true;                                                                                                                // CSClassFormatter.cs:1036
            }                                                                                                                               // CSClassFormatter.cs:1037
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Observation.ReferenceRangeComponent' Value
/// </summary>
            public void Set(Int32 index, Accessor__ReferenceRangeComponent value)                                                           // CSClassFormatter.cs:1042
            {                                                                                                                               // CSClassFormatter.cs:1043
                if (value is null)                                                                                                          // CSClassFormatter.cs:1044
                    throw new ArgumentNullException(nameof(value));                                                                         // CSClassFormatter.cs:1045
                this.Ptr.ReferenceRange[index] = value.Ptr;                                                                                 // CSClassFormatter.cs:1046
            }                                                                                                                               // CSClassFormatter.cs:1047
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Add 'Observation.ReferenceRangeComponent' Value
/// </summary>
            public void Add(Accessor__ReferenceRangeComponent value)                                                                        // CSClassFormatter.cs:1052
            {                                                                                                                               // CSClassFormatter.cs:1053
                if (value is null)                                                                                                          // CSClassFormatter.cs:1054
                    throw new ArgumentNullException(nameof(value));                                                                         // CSClassFormatter.cs:1055
                this.Ptr.ReferenceRange.Add(value.Ptr);                                                                                     // CSClassFormatter.cs:1056
            }                                                                                                                               // CSClassFormatter.cs:1057
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
#region Class Accessor__ReferenceRangeComponent
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Class to implement 'Accessor__ReferenceRangeComponent'
/// </summary>
        public class Accessor__ReferenceRangeComponent :                                                                                    // CSClassFormatter.cs:98
            ItemBase<Observation.ReferenceRangeComponent>                                                                                   // CSClassFormatter.cs:99
        {                                                                                                                                   // CSClassFormatter.cs:100
#region class Accessor__ElementId
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property ElementId
/// </summary>
            public class Accessor__ElementId : ItemBase<Observation.ReferenceRangeComponent>                                                // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__ElementId Create(Observation.ReferenceRangeComponent ptr)                                           // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__ElementId retVal = new Accessor__ElementId();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__ElementId() : base()                                                                                       // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'String' value
                /// return true if successfull, false if value is null or con not be converted to 'String'
/// </summary>
                public bool Get(out String value)                                                                                           // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.ElementId as String;                                                                                   // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'String' Value
/// </summary>
                public void Set(String value) => this.Ptr.ElementId = value;                                                                // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Extension
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor class for property Extension
/// </summary>
            public class Accessor__Extension : ItemBase<Observation.ReferenceRangeComponent>                                                // CSClassFormatter.cs:1292
            {                                                                                                                               // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Extension Create(Observation.ReferenceRangeComponent ptr)                                           // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Extension retVal = new Accessor__Extension();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Extension() : base()                                                                                       // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Remove item at indicated index
/// </summary>
                public void RemoveAt(Int32 index) => this.Ptr.Extension.RemoveAt(index);                                                    // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get list of all items
/// </summary>
                public IEnumerable<Extension> Get() => this.Ptr.Extension;                                                                  // CSClassFormatter.cs:1161
            }                                                                                                                               // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__ModifierExtension
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor class for property ModifierExtension
/// </summary>
            public class Accessor__ModifierExtension : ItemBase<Observation.ReferenceRangeComponent>                                        // CSClassFormatter.cs:1292
            {                                                                                                                               // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__ModifierExtension Create(Observation.ReferenceRangeComponent ptr)                                   // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__ModifierExtension retVal = new Accessor__ModifierExtension();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__ModifierExtension() : base()                                                                               // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Remove item at indicated index
/// </summary>
                public void RemoveAt(Int32 index) => this.Ptr.ModifierExtension.RemoveAt(index);                                            // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get list of all items
/// </summary>
                public IEnumerable<Extension> Get() => this.Ptr.ModifierExtension;                                                          // CSClassFormatter.cs:1161
            }                                                                                                                               // CSClassFormatter.cs:1304
#endregion
#region class Accessor__Low
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property Low
/// </summary>
            public class Accessor__Low : ItemBase<Observation.ReferenceRangeComponent>                                                      // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Low Create(Observation.ReferenceRangeComponent ptr)                                                 // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Low retVal = new Accessor__Low();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Low() : base()                                                                                             // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'SimpleQuantity' value
                /// return true if successfull, false if value is null or con not be converted to 'SimpleQuantity'
/// </summary>
                public bool Get(out SimpleQuantity value)                                                                                   // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Low as SimpleQuantity;                                                                                 // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'SimpleQuantity' Value
/// </summary>
                public void Set(SimpleQuantity value) => this.Ptr.Low = value;                                                              // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
#region class Accessor__High
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property High
/// </summary>
            public class Accessor__High : ItemBase<Observation.ReferenceRangeComponent>                                                     // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__High Create(Observation.ReferenceRangeComponent ptr)                                                // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__High retVal = new Accessor__High();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__High() : base()                                                                                            // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'SimpleQuantity' value
                /// return true if successfull, false if value is null or con not be converted to 'SimpleQuantity'
/// </summary>
                public bool Get(out SimpleQuantity value)                                                                                   // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.High as SimpleQuantity;                                                                                // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'SimpleQuantity' Value
/// </summary>
                public void Set(SimpleQuantity value) => this.Ptr.High = value;                                                             // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
#region class Accessor__Type
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property Type
/// </summary>
            public class Accessor__Type : ItemBase<Observation.ReferenceRangeComponent>                                                     // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Type Create(Observation.ReferenceRangeComponent ptr)                                                // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Type retVal = new Accessor__Type();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Type() : base()                                                                                            // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'CodeableConcept' value
                /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
                public bool Get(out CodeableConcept value)                                                                                  // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Type as CodeableConcept;                                                                               // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'CodeableConcept' Value
/// </summary>
                public void Set(CodeableConcept value) => this.Ptr.Type = value;                                                            // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__AppliesTo
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor class for property AppliesTo
/// </summary>
            public class Accessor__AppliesTo : ItemBase<Observation.ReferenceRangeComponent>                                                // CSClassFormatter.cs:1292
            {                                                                                                                               // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__AppliesTo Create(Observation.ReferenceRangeComponent ptr)                                           // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__AppliesTo retVal = new Accessor__AppliesTo();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Count of items
/// </summary>
                public Int32 Count => this.Ptr.AppliesTo.Count;                                                                             // CSClassFormatter.cs:1068
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__AppliesTo() : base()                                                                                       // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Remove item at indicated index
/// </summary>
                public void RemoveAt(Int32 index) => this.Ptr.AppliesTo.RemoveAt(index);                                                    // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get list of all items
/// </summary>
                public IEnumerable<CodeableConcept> Get() => this.Ptr.AppliesTo;                                                            // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'CodeableConcept' value
                /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
                public bool Get(Int32 index, out CodeableConcept value)                                                                     // CSClassFormatter.cs:1075
                {                                                                                                                           // CSClassFormatter.cs:1076
                    value = this.Ptr.AppliesTo[index] as CodeableConcept;                                                                   // CSClassFormatter.cs:1077
                    return value != null;                                                                                                   // CSClassFormatter.cs:1078
                }                                                                                                                           // CSClassFormatter.cs:1079
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'CodeableConcept' Value
/// </summary>
                public void Set(Int32 index, CodeableConcept value) => this.Ptr.AppliesTo[index] = value;                                   // CSClassFormatter.cs:1084
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Add 'CodeableConcept' Value
/// </summary>
                public void Add(CodeableConcept value) => this.Ptr.AppliesTo.Add(value);                                                    // CSClassFormatter.cs:1089
            }                                                                                                                               // CSClassFormatter.cs:1304
#endregion
#region class Accessor__Age
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property Age
/// </summary>
            public class Accessor__Age : ItemBase<Observation.ReferenceRangeComponent>                                                      // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Age Create(Observation.ReferenceRangeComponent ptr)                                                 // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Age retVal = new Accessor__Age();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Age() : base()                                                                                             // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'Range' value
                /// return true if successfull, false if value is null or con not be converted to 'Range'
/// </summary>
                public bool Get(out Range value)                                                                                            // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Age as Range;                                                                                          // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'Range' Value
/// </summary>
                public void Set(Range value) => this.Ptr.Age = value;                                                                       // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
#region class Accessor__TextElement
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property TextElement
/// </summary>
            public class Accessor__TextElement : ItemBase<Observation.ReferenceRangeComponent>                                              // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__TextElement Create(Observation.ReferenceRangeComponent ptr)                                         // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__TextElement retVal = new Accessor__TextElement();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__TextElement() : base()                                                                                     // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ReferenceRangeComponent ptr)                                                          // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'FhirString' value
                /// return true if successfull, false if value is null or con not be converted to 'FhirString'
/// </summary>
                public bool Get(out FhirString value)                                                                                       // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.TextElement as FhirString;                                                                             // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'FhirString' Value
/// </summary>
                public void Set(FhirString value) => this.Ptr.TextElement = value;                                                          // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__ReferenceRangeComponent Create(Observation.ReferenceRangeComponent ptr)                                 // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__ReferenceRangeComponent retVal = new Accessor__ReferenceRangeComponent();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.id.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__ElementId Id => Accessor__ElementId.Create(this.Ptr);                                                          // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.extension.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Extension Extension => Accessor__Extension.Create(this.Ptr);                                                   // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.modifierExtension.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__ModifierExtension ModifierExtension => Accessor__ModifierExtension.Create(this.Ptr);                           // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.low.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Low Low => Accessor__Low.Create(this.Ptr);                                                                     // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.high.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__High High => Accessor__High.Create(this.Ptr);                                                                  // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.type.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Type Type => Accessor__Type.Create(this.Ptr);                                                                  // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.appliesTo.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__AppliesTo AppliesTo => Accessor__AppliesTo.Create(this.Ptr);                                                   // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.age.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Age Age => Accessor__Age.Create(this.Ptr);                                                                     // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.referenceRange.text.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__TextElement Text => Accessor__TextElement.Create(this.Ptr);                                                    // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__ReferenceRangeComponent() : base()                                                                             // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation.ReferenceRangeComponent ptr)                                                              // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
        }                                                                                                                                   // CSClassFormatter.cs:141
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__HasMember
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property HasMember
/// </summary>
        public class Accessor__HasMember : ItemBase<Observation>                                                                            // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__HasMember Create(Observation ptr)                                                                       // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__HasMember retVal = new Accessor__HasMember();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__HasMember() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.HasMember.RemoveAt(index);                                                        // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<ResourceReference> Get() => this.Ptr.HasMember;                                                              // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__DerivedFrom
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property DerivedFrom
/// </summary>
        public class Accessor__DerivedFrom : ItemBase<Observation>                                                                          // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__DerivedFrom Create(Observation ptr)                                                                     // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__DerivedFrom retVal = new Accessor__DerivedFrom();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__DerivedFrom() : base()                                                                                         // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.DerivedFrom.RemoveAt(index);                                                      // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<ResourceReference> Get() => this.Ptr.DerivedFrom;                                                            // CSClassFormatter.cs:1161
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Component
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Accessor class for property Component
/// </summary>
        public class Accessor__Component : ItemBase<Observation>                                                                            // CSClassFormatter.cs:1292
        {                                                                                                                                   // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__Component Create(Observation ptr)                                                                       // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__Component retVal = new Accessor__Component();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Count of items
/// </summary>
            public Int32 Count => this.Ptr.Component.Count;                                                                                 // CSClassFormatter.cs:1022
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__Component() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation ptr)                                                                                      // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Remove item at indicated index
/// </summary>
            public void RemoveAt(Int32 index) => this.Ptr.Component.RemoveAt(index);                                                        // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get list of all items
/// </summary>
            public IEnumerable<Observation.ComponentComponent> Get() => this.Ptr.Component;                                                 // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Get 'Observation.ComponentComponent' value
            /// return true if successfull, false if value is null or con not be converted to 'Observation.ComponentComponent'
/// </summary>
            public bool Get(Int32 index, out Accessor__ComponentComponent value)                                                            // CSClassFormatter.cs:1030
            {                                                                                                                               // CSClassFormatter.cs:1031
                value = null;                                                                                                               // CSClassFormatter.cs:1032
                Observation.ComponentComponent temp = this.Ptr.Component[index];                                                            // CSClassFormatter.cs:1033
                if (temp == null) return false;                                                                                             // CSClassFormatter.cs:1034
                value = Accessor__ComponentComponent.Create(temp);                                                                          // CSClassFormatter.cs:1035
                return true;                                                                                                                // CSClassFormatter.cs:1036
            }                                                                                                                               // CSClassFormatter.cs:1037
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Set 'Observation.ComponentComponent' Value
/// </summary>
            public void Set(Int32 index, Accessor__ComponentComponent value)                                                                // CSClassFormatter.cs:1042
            {                                                                                                                               // CSClassFormatter.cs:1043
                if (value is null)                                                                                                          // CSClassFormatter.cs:1044
                    throw new ArgumentNullException(nameof(value));                                                                         // CSClassFormatter.cs:1045
                this.Ptr.Component[index] = value.Ptr;                                                                                      // CSClassFormatter.cs:1046
            }                                                                                                                               // CSClassFormatter.cs:1047
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Add 'Observation.ComponentComponent' Value
/// </summary>
            public void Add(Accessor__ComponentComponent value)                                                                             // CSClassFormatter.cs:1052
            {                                                                                                                               // CSClassFormatter.cs:1053
                if (value is null)                                                                                                          // CSClassFormatter.cs:1054
                    throw new ArgumentNullException(nameof(value));                                                                         // CSClassFormatter.cs:1055
                this.Ptr.Component.Add(value.Ptr);                                                                                          // CSClassFormatter.cs:1056
            }                                                                                                                               // CSClassFormatter.cs:1057
        }                                                                                                                                   // CSClassFormatter.cs:1304
#endregion
#region Class Accessor__ComponentComponent
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Class to implement 'Accessor__ComponentComponent'
/// </summary>
        public class Accessor__ComponentComponent :                                                                                         // CSClassFormatter.cs:98
            ItemBase<Observation.ComponentComponent>                                                                                        // CSClassFormatter.cs:99
        {                                                                                                                                   // CSClassFormatter.cs:100
#region class Accessor__ElementId
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property ElementId
/// </summary>
            public class Accessor__ElementId : ItemBase<Observation.ComponentComponent>                                                     // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__ElementId Create(Observation.ComponentComponent ptr)                                                // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__ElementId retVal = new Accessor__ElementId();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__ElementId() : base()                                                                                       // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'String' value
                /// return true if successfull, false if value is null or con not be converted to 'String'
/// </summary>
                public bool Get(out String value)                                                                                           // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.ElementId as String;                                                                                   // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'String' Value
/// </summary>
                public void Set(String value) => this.Ptr.ElementId = value;                                                                // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Extension
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor class for property Extension
/// </summary>
            public class Accessor__Extension : ItemBase<Observation.ComponentComponent>                                                     // CSClassFormatter.cs:1292
            {                                                                                                                               // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Extension Create(Observation.ComponentComponent ptr)                                                // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Extension retVal = new Accessor__Extension();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Extension() : base()                                                                                       // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Remove item at indicated index
/// </summary>
                public void RemoveAt(Int32 index) => this.Ptr.Extension.RemoveAt(index);                                                    // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get list of all items
/// </summary>
                public IEnumerable<Extension> Get() => this.Ptr.Extension;                                                                  // CSClassFormatter.cs:1161
            }                                                                                                                               // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__ModifierExtension
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor class for property ModifierExtension
/// </summary>
            public class Accessor__ModifierExtension : ItemBase<Observation.ComponentComponent>                                             // CSClassFormatter.cs:1292
            {                                                                                                                               // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__ModifierExtension Create(Observation.ComponentComponent ptr)                                        // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__ModifierExtension retVal = new Accessor__ModifierExtension();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__ModifierExtension() : base()                                                                               // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Remove item at indicated index
/// </summary>
                public void RemoveAt(Int32 index) => this.Ptr.ModifierExtension.RemoveAt(index);                                            // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get list of all items
/// </summary>
                public IEnumerable<Extension> Get() => this.Ptr.ModifierExtension;                                                          // CSClassFormatter.cs:1161
            }                                                                                                                               // CSClassFormatter.cs:1304
#endregion
#region class Accessor__Code
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property Code
/// </summary>
            public class Accessor__Code : ItemBase<Observation.ComponentComponent>                                                          // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Code Create(Observation.ComponentComponent ptr)                                                     // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Code retVal = new Accessor__Code();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Code() : base()                                                                                            // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'CodeableConcept' value
                /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
                public bool Get(out CodeableConcept value)                                                                                  // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Code as CodeableConcept;                                                                               // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'CodeableConcept' Value
/// </summary>
                public void Set(CodeableConcept value) => this.Ptr.Code = value;                                                            // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
#region class Accessor__Value
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property Value
/// </summary>
            public class Accessor__Value : ItemBase<Observation.ComponentComponent>                                                         // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Value Create(Observation.ComponentComponent ptr)                                                    // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Value retVal = new Accessor__Value();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Value() : base()                                                                                           // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'Quantity' value
                /// return true if successfull, false if value is null or con not be converted to 'Quantity'
/// </summary>
                public bool Get(out Quantity value)                                                                                         // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as Quantity;                                                                                     // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'Quantity' Value
/// </summary>
                public void Set(Quantity value) => this.Ptr.Value = value;                                                                  // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'CodeableConcept' value
                /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
                public bool Get(out CodeableConcept value)                                                                                  // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as CodeableConcept;                                                                              // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'CodeableConcept' Value
/// </summary>
                public void Set(CodeableConcept value) => this.Ptr.Value = value;                                                           // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'FhirString' value
                /// return true if successfull, false if value is null or con not be converted to 'FhirString'
/// </summary>
                public bool Get(out FhirString value)                                                                                       // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as FhirString;                                                                                   // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'FhirString' Value
/// </summary>
                public void Set(FhirString value) => this.Ptr.Value = value;                                                                // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'FhirBoolean' value
                /// return true if successfull, false if value is null or con not be converted to 'FhirBoolean'
/// </summary>
                public bool Get(out FhirBoolean value)                                                                                      // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as FhirBoolean;                                                                                  // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'FhirBoolean' Value
/// </summary>
                public void Set(FhirBoolean value) => this.Ptr.Value = value;                                                               // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'Integer' value
                /// return true if successfull, false if value is null or con not be converted to 'Integer'
/// </summary>
                public bool Get(out Integer value)                                                                                          // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as Integer;                                                                                      // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'Integer' Value
/// </summary>
                public void Set(Integer value) => this.Ptr.Value = value;                                                                   // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'Range' value
                /// return true if successfull, false if value is null or con not be converted to 'Range'
/// </summary>
                public bool Get(out Range value)                                                                                            // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as Range;                                                                                        // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'Range' Value
/// </summary>
                public void Set(Range value) => this.Ptr.Value = value;                                                                     // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'Ratio' value
                /// return true if successfull, false if value is null or con not be converted to 'Ratio'
/// </summary>
                public bool Get(out Ratio value)                                                                                            // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as Ratio;                                                                                        // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'Ratio' Value
/// </summary>
                public void Set(Ratio value) => this.Ptr.Value = value;                                                                     // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'SampledData' value
                /// return true if successfull, false if value is null or con not be converted to 'SampledData'
/// </summary>
                public bool Get(out SampledData value)                                                                                      // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as SampledData;                                                                                  // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'SampledData' Value
/// </summary>
                public void Set(SampledData value) => this.Ptr.Value = value;                                                               // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'Time' value
                /// return true if successfull, false if value is null or con not be converted to 'Time'
/// </summary>
                public bool Get(out Time value)                                                                                             // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as Time;                                                                                         // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'Time' Value
/// </summary>
                public void Set(Time value) => this.Ptr.Value = value;                                                                      // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'FhirDateTime' value
                /// return true if successfull, false if value is null or con not be converted to 'FhirDateTime'
/// </summary>
                public bool Get(out FhirDateTime value)                                                                                     // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as FhirDateTime;                                                                                 // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'FhirDateTime' Value
/// </summary>
                public void Set(FhirDateTime value) => this.Ptr.Value = value;                                                              // CSClassFormatter.cs:779
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'Period' value
                /// return true if successfull, false if value is null or con not be converted to 'Period'
/// </summary>
                public bool Get(out Period value)                                                                                           // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.Value as Period;                                                                                       // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'Period' Value
/// </summary>
                public void Set(Period value) => this.Ptr.Value = value;                                                                    // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
#region class Accessor__DataAbsentReason
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor for property DataAbsentReason
/// </summary>
            public class Accessor__DataAbsentReason : ItemBase<Observation.ComponentComponent>                                              // CSClassFormatter.cs:916
            {                                                                                                                               // CSClassFormatter.cs:917
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__DataAbsentReason Create(Observation.ComponentComponent ptr)                                         // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__DataAbsentReason retVal = new Accessor__DataAbsentReason();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__DataAbsentReason() : base()                                                                                // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'CodeableConcept' value
                /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
                public bool Get(out CodeableConcept value)                                                                                  // CSClassFormatter.cs:771
                {                                                                                                                           // CSClassFormatter.cs:772
                    value = this.Ptr.DataAbsentReason as CodeableConcept;                                                                   // CSClassFormatter.cs:773
                    return value != null;                                                                                                   // CSClassFormatter.cs:774
                }                                                                                                                           // CSClassFormatter.cs:775
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'CodeableConcept' Value
/// </summary>
                public void Set(CodeableConcept value) => this.Ptr.DataAbsentReason = value;                                                // CSClassFormatter.cs:779
            }                                                                                                                               // CSClassFormatter.cs:929
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__Interpretation
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor class for property Interpretation
/// </summary>
            public class Accessor__Interpretation : ItemBase<Observation.ComponentComponent>                                                // CSClassFormatter.cs:1292
            {                                                                                                                               // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__Interpretation Create(Observation.ComponentComponent ptr)                                           // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__Interpretation retVal = new Accessor__Interpretation();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Count of items
/// </summary>
                public Int32 Count => this.Ptr.Interpretation.Count;                                                                        // CSClassFormatter.cs:1068
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__Interpretation() : base()                                                                                  // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Remove item at indicated index
/// </summary>
                public void RemoveAt(Int32 index) => this.Ptr.Interpretation.RemoveAt(index);                                               // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get list of all items
/// </summary>
                public IEnumerable<CodeableConcept> Get() => this.Ptr.Interpretation;                                                       // CSClassFormatter.cs:1161
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get 'CodeableConcept' value
                /// return true if successfull, false if value is null or con not be converted to 'CodeableConcept'
/// </summary>
                public bool Get(Int32 index, out CodeableConcept value)                                                                     // CSClassFormatter.cs:1075
                {                                                                                                                           // CSClassFormatter.cs:1076
                    value = this.Ptr.Interpretation[index] as CodeableConcept;                                                              // CSClassFormatter.cs:1077
                    return value != null;                                                                                                   // CSClassFormatter.cs:1078
                }                                                                                                                           // CSClassFormatter.cs:1079
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Set 'CodeableConcept' Value
/// </summary>
                public void Set(Int32 index, CodeableConcept value) => this.Ptr.Interpretation[index] = value;                              // CSClassFormatter.cs:1084
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Add 'CodeableConcept' Value
/// </summary>
                public void Add(CodeableConcept value) => this.Ptr.Interpretation.Add(value);                                               // CSClassFormatter.cs:1089
            }                                                                                                                               // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CSClassFormatter.cs:1287
#region class Accessor__ReferenceRange
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Accessor class for property ReferenceRange
/// </summary>
            public class Accessor__ReferenceRange : ItemBase<Observation.ComponentComponent>                                                // CSClassFormatter.cs:1292
            {                                                                                                                               // CSClassFormatter.cs:1293
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// static creator
/// </summary>
                public static Accessor__ReferenceRange Create(Observation.ComponentComponent ptr)                                           // CodeBlockNestedExtensions.cs:21
                {                                                                                                                           // CodeBlockNestedExtensions.cs:22
                    Accessor__ReferenceRange retVal = new Accessor__ReferenceRange();
                    retVal.Init(ptr);
                    return retVal;
                }                                                                                                                           // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
                public Accessor__ReferenceRange() : base()                                                                                  // CodeBlockNestedExtensions.cs:39
                {                                                                                                                           // CodeBlockNestedExtensions.cs:40
                }                                                                                                                           // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
                public override void Init(Observation.ComponentComponent ptr)                                                               // CodeBlockNestedExtensions.cs:74
                {                                                                                                                           // CodeBlockNestedExtensions.cs:75
                    base.Init(ptr);                                                                                                         // CodeBlockNestedExtensions.cs:76
                }                                                                                                                           // CodeBlockNestedExtensions.cs:62
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Remove item at indicated index
/// </summary>
                public void RemoveAt(Int32 index) => this.Ptr.ReferenceRange.RemoveAt(index);                                               // CSClassFormatter.cs:1156
                                                                                                                                            // CodeBlockNested.cs:315
                /// <summary>
                /// Get list of all items
/// </summary>
                public IEnumerable<Observation.ReferenceRangeComponent> Get() => this.Ptr.ReferenceRange;                                   // CSClassFormatter.cs:1161
            }                                                                                                                               // CSClassFormatter.cs:1304
#endregion
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// static creator
/// </summary>
            public static Accessor__ComponentComponent Create(Observation.ComponentComponent ptr)                                           // CodeBlockNestedExtensions.cs:21
            {                                                                                                                               // CodeBlockNestedExtensions.cs:22
                Accessor__ComponentComponent retVal = new Accessor__ComponentComponent();
                retVal.Init(ptr);
                return retVal;
            }                                                                                                                               // CodeBlockNestedExtensions.cs:26
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.id.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__ElementId Id => Accessor__ElementId.Create(this.Ptr);                                                          // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.extension.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Extension Extension => Accessor__Extension.Create(this.Ptr);                                                   // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.modifierExtension.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__ModifierExtension ModifierExtension => Accessor__ModifierExtension.Create(this.Ptr);                           // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.code.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Code Code => Accessor__Code.Create(this.Ptr);                                                                  // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.value[x].
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Value Value => Accessor__Value.Create(this.Ptr);                                                               // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.dataAbsentReason.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__DataAbsentReason DataAbsentReason => Accessor__DataAbsentReason.Create(this.Ptr);                              // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.interpretation.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__Interpretation Interpretation => Accessor__Interpretation.Create(this.Ptr);                                    // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
            /// <summary>
            /// Property for accessing Observation.component.referenceRange.
            /// An accessor instance is created each time this property is called.
/// </summary>
            public Accessor__ReferenceRange ReferenceRange => Accessor__ReferenceRange.Create(this.Ptr);                                    // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
            public Accessor__ComponentComponent() : base()                                                                                  // CodeBlockNestedExtensions.cs:39
            {                                                                                                                               // CodeBlockNestedExtensions.cs:40
            }                                                                                                                               // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
            public override void Init(Observation.ComponentComponent ptr)                                                                   // CodeBlockNestedExtensions.cs:74
            {                                                                                                                               // CodeBlockNestedExtensions.cs:75
                base.Init(ptr);                                                                                                             // CodeBlockNestedExtensions.cs:76
            }                                                                                                                               // CodeBlockNestedExtensions.cs:62
        }                                                                                                                                   // CSClassFormatter.cs:141
#endregion
#endregion
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// static creator
/// </summary>
        public static Fixed2 Create(Observation ptr)                                                                                        // CodeBlockNestedExtensions.cs:21
        {                                                                                                                                   // CodeBlockNestedExtensions.cs:22
            Fixed2 retVal = new Fixed2();
            retVal.Init(ptr);
            return retVal;
        }                                                                                                                                   // CodeBlockNestedExtensions.cs:26
#region Field Definitions
#endregion
#region Property Definitions
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.id.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__IdElement Id => Accessor__IdElement.Create(this.Ptr);                                                              // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.meta.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Meta Meta => Accessor__Meta.Create(this.Ptr);                                                                      // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.implicitRules.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__ImplicitRulesElement ImplicitRules => Accessor__ImplicitRulesElement.Create(this.Ptr);                             // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.language.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__LanguageElement Language => Accessor__LanguageElement.Create(this.Ptr);                                            // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.text.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Text Text => Accessor__Text.Create(this.Ptr);                                                                      // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.contained.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Contained Contained => Accessor__Contained.Create(this.Ptr);                                                       // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.modifierExtension.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__ModifierExtension ModifierExtension => Accessor__ModifierExtension.Create(this.Ptr);                               // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.identifier.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Identifier Identifier => Accessor__Identifier.Create(this.Ptr);                                                    // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.basedOn.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__BasedOn BasedOn => Accessor__BasedOn.Create(this.Ptr);                                                             // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.partOf.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__PartOf PartOf => Accessor__PartOf.Create(this.Ptr);                                                                // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.status.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__StatusElement Status => Accessor__StatusElement.Create(this.Ptr);                                                  // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.category.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Category Category => Accessor__Category.Create(this.Ptr);                                                          // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.code.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Code Code => Accessor__Code.Create(this.Ptr);                                                                      // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.subject.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Subject Subject => Accessor__Subject.Create(this.Ptr);                                                             // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.focus.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Focus Focus => Accessor__Focus.Create(this.Ptr);                                                                   // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.encounter.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Encounter Encounter => Accessor__Encounter.Create(this.Ptr);                                                       // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.effective[x].
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Effective Effective => Accessor__Effective.Create(this.Ptr);                                                       // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.issued.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__IssuedElement Issued => Accessor__IssuedElement.Create(this.Ptr);                                                  // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.performer.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Performer Performer => Accessor__Performer.Create(this.Ptr);                                                       // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.value[x].
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Value Value => Accessor__Value.Create(this.Ptr);                                                                   // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.dataAbsentReason.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__DataAbsentReason DataAbsentReason => Accessor__DataAbsentReason.Create(this.Ptr);                                  // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.interpretation.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Interpretation Interpretation => Accessor__Interpretation.Create(this.Ptr);                                        // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.note.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Note Note => Accessor__Note.Create(this.Ptr);                                                                      // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.bodySite.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__BodySite BodySite => Accessor__BodySite.Create(this.Ptr);                                                          // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.method.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Method Method => Accessor__Method.Create(this.Ptr);                                                                // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.specimen.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Specimen Specimen => Accessor__Specimen.Create(this.Ptr);                                                          // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.device.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Device Device => Accessor__Device.Create(this.Ptr);                                                                // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.referenceRange.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__ReferenceRange ReferenceRange => Accessor__ReferenceRange.Create(this.Ptr);                                        // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.hasMember.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__HasMember HasMember => Accessor__HasMember.Create(this.Ptr);                                                       // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.derivedFrom.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__DerivedFrom DerivedFrom => Accessor__DerivedFrom.Create(this.Ptr);                                                 // CSClassFormatter.cs:710
                                                                                                                                            // CodeBlockNested.cs:315
        /// <summary>
        /// Property for accessing Observation.component.
        /// An accessor instance is created each time this property is called.
/// </summary>
        public Accessor__Component Component => Accessor__Component.Create(this.Ptr);                                                       // CSClassFormatter.cs:710
#endregion
                                                                                                                                            // CodeBlockNestedExtensions.cs:38
        public Fixed2() : base()                                                                                                            // CodeBlockNestedExtensions.cs:39
        {                                                                                                                                   // CodeBlockNestedExtensions.cs:40
        }                                                                                                                                   // CodeBlockNestedExtensions.cs:41
                                                                                                                                            // CodeBlockNestedExtensions.cs:73
        public override void Init(Observation ptr)                                                                                          // CodeBlockNestedExtensions.cs:74
        {                                                                                                                                   // CodeBlockNestedExtensions.cs:75
            base.Init(ptr);                                                                                                                 // CodeBlockNestedExtensions.cs:76
            {                                                                                                                               // CSClassFormatter.cs:458
                FhirDateTime start = new FhirDateTime("1002-01-02");                                                                        // CSClassFormatter.cs:459
                FhirDateTime end = new FhirDateTime("1003-04-05");                                                                          // CSClassFormatter.cs:460
                Period temp = new Period(start, end);                                                                                       // CSClassFormatter.cs:461
                this.Ptr.Effective = temp;                                                                                                  // CSClassFormatter.cs:463
            }                                                                                                                               // CSClassFormatter.cs:469
            {                                                                                                                               // CSClassFormatter.cs:270
                FhirBoolean temp = new FhirBoolean(true);                                                                                   // CSClassFormatter.cs:271
                this.Ptr.Value = temp;                                                                                                      // CSClassFormatter.cs:274
            }                                                                                                                               // CSClassFormatter.cs:280
        }                                                                                                                                   // CodeBlockNestedExtensions.cs:62
    }                                                                                                                                       // CSClassFormatter.cs:141
}                                                                                                                                           // CSCodeFormatter.cs:94
